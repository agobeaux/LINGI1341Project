POLL ERR !!! voir l'utilité


POUR LES DEUX : définir des constantes : 12 = size header, 2 et 3 sont des TYPE_ACK DATA etc


PROBLEME ! Il y a une limite au nombre de paquets à envoyer en 2sec (2sec = temps de vie d'un paquet). Car si on a 2 ack 1 envoyés (réception d'un pkt 0 + ack1 arrivé mais mal formaté => ack 0). Si on a déjà fait une boucle (0->255 envoyés en moins de 2sec), le ack1 va dire qu'on a reçu le paquet alros que pas d'office, il s'agit du mauvais paquet... => 123 (nbre à vérifier) paquets chaque 2 sec max (à envoyer, sender)
PAS 123

si paquet TR : congestion du réseaux => si on renvoit direct on sature le réseau

rapport + suite de tests + makefile

tests : queue + ordered queue
        script bash amélioré avec + de commentaires etc (et les différents flags sur un fichier de 2 ou 3 paquets)
        encode decode sur un pkt normal
        encode sur un paquet qui pue => error et print l'erreur
        decode sur une data qui pue (difficile à faire)

FICHIERS .h : mettre les fonctions avec commentaires

Retransmission timer : pas 2 sec mais plutôt 1.5x ou 2x le RTT (mais condition pour le nbre de pkt / 2 sec à régler)
gdb, cppcheck

REDEFINIR WINDOW !!!
vérifier comment on send les pkt si la window change (devient plus petite surtout)

IDEE : timestamp for roundtrip time
=> Utiliser une moyenne pondérée plutôt qu'une moyenne simple ?
On donne un gros poids aux derniers ! Utiliser une queue pour garder les
RTT reçus ? Comme ça on pop le premier et rajouter le dernier pour calculer le temps ?
ça peut être intéressant.

queue_payload_write : il faut refaire un check de poll pour voir si on peut écrire à chaque fois.

sender : renvoi des fichiers après timeout : poll pour vérifier à chaque fois !!!

problème : si receiver ne reçoit rien dès le début, il ne se connecte pas et donc le timer ne peut pas le timeout. Mettre dans rapport ou corriger ?

GERER TIME OUT ! en fonction du délai et jitter etc.
